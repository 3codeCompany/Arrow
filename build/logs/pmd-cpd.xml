<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
  <duplication lines="7" tokens="21">
    <file path="C:\dev\www\arrowplatform\src\packages\org.arrowplatform.access\models\AccessPointGroup.php" line="14"/>
    <file path="C:\dev\www\arrowplatform\src\packages\org.arrowplatform.access\models\AccessUserGroup.php" line="15"/>
    <codefragment>    const TCLASS = __CLASS__;&#13;
&#13;
    public static function create( $params, $class=self::TCLASS ){&#13;
        $object = parent::create($params, $class);&#13;
&#13;
&#13;
        return $object;&#13;
</codefragment>
  </duplication>
  <duplication lines="6" tokens="23">
    <file path="C:\dev\www\arrowplatform\src\packages\org.arrowplatform.cms\models\pages\PagePlaceConf.php" line="43"/>
    <file path="C:\dev\www\arrowplatform\src\packages\org.arrowplatform.cms\models\pages\PagePlaceSchema.php" line="45"/>
    <codefragment>        foreach ( $tmp as $key =&gt; $val ){&#13;
            foreach ($result as $module)&#13;
                if( $module[Module::F_ID] == $val )&#13;
                    $tmp[$key] = $module;&#13;
        }&#13;
        return $tmp;&#13;
</codefragment>
  </duplication>
  <duplication lines="13" tokens="59">
    <file path="C:\dev\www\arrowplatform\src\packages\org.arrowplatform.communication\models\newsletter\CommNewsletterGroup.php" line="64"/>
    <file path="C:\dev\www\arrowplatform\src\packages\org.arrowplatform.communication\models\newsletter\CommNewsletterGroup.php" line="125"/>
    <codefragment>        elseif ($this['type'] == self::FILTER_T_FILTERS){&#13;
            //osoby wpisane r�cznie&#13;
            $group_criteria = new Criteria();&#13;
            $group_criteria-&gt;addCondition(CommNewsletterGroupSubscriber::F_GROUP_ID, $this-&gt;getPKey());&#13;
            $conn  = CommNewsletterGroupSubscriber::getKeyValuePair(CommNewsletterGroupSubscriber::F_SUBSCRIBER_ID, $group_criteria, CommNewsletterGroupSubscriber::TCLASS);&#13;
            $criteria = new Criteria();&#13;
            if (!empty($conn))&#13;
                $criteria-&gt;addCondition(CommNewsletterAdressee::F_ID, $conn, Criteria::C_IN);&#13;
            &#13;
            //osoby wpisane za pomoc� filtr�w&#13;
            $filter_object_criteria = new Criteria('utils.filters.UtilsFilterObject');&#13;
            $filter_object_criteria-&gt;addCondition('class', 'CommNewsletterGroup');&#13;
            $filter_object_criteria-&gt;addCondition('object_id', $this['id']);&#13;
</codefragment>
  </duplication>
  <duplication lines="8" tokens="21">
    <file path="C:\dev\www\arrowplatform\src\packages\org.arrowplatform.communication\models\newsletter\CommNewsletterCampaignGroup.php" line="11"/>
    <file path="C:\dev\www\arrowplatform\src\packages\org.arrowplatform.communication\models\newsletter\CommNewsletterGroupSubscriber.php" line="10"/>
    <codefragment>    const F_GROUP_ID = "group_id";&#13;
&#13;
&#13;
//*USER AREA*//&#13;
&#13;
public static function create( $initialValues, $class=self::TCLASS ){&#13;
    $object = parent::create($initialValues, $class);&#13;
    return $object;&#13;
</codefragment>
  </duplication>
  <duplication lines="11" tokens="16">
    <file path="C:\dev\www\arrowplatform\src\packages\org.arrowplatform.langs\models\panel\AdministrationExtensionPoint.php" line="12"/>
    <file path="C:\dev\www\arrowplatform\src\packages\org.arrowplatform.langs\models\panel\AdministrationMenuElementsContainer.php" line="12"/>
    <codefragment>    public static function getElements()&#13;
    {&#13;
        $arr = array(&#13;
            array(&#13;
                    "title" =&gt; "Języki",&#13;
                    "elements" =&gt; array(&#13;
                )&#13;
            )&#13;
        );&#13;
&#13;
        return $arr;&#13;
</codefragment>
  </duplication>
  <duplication lines="6" tokens="27">
    <file path="C:\dev\www\arrowplatform\src\packages\org.arrowplatform.common\controllers\Controller.php" line="122"/>
    <file path="C:\dev\www\arrowplatform\src\packages\org.arrowplatform.utils\controllers\UtilsController.php" line="37"/>
    <codefragment>    public function settings_change( $action, RequestContext $request)
    {
        $handle = \Arrow\Models\Settings::getDefault();
        foreach ($request["data"] as $package =&gt; $settings) {
            foreach ($settings as $name =&gt; $setting) {
                $handle-&gt;setSettingValue($package, $name, $setting);
</codefragment>
  </duplication>
</pmd-cpd>
